from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
import pandas as pd
import os

# üìÑ –£–∫–∞–∂–∏ –ø—É—Ç—å –∫ PDF-—Ñ–∞–π–ª—É, –∫–æ—Ç–æ—Ä—ã–π –±–æ—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
PDF_FILE_PATH = 'promo.pdf'

# üìã –°–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
subscribers = []

# üìç –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton("üì© –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", callback_data='subscribe')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! üëã –ü–æ–¥–ø–∏—à–∏—Å—å –∏ –ø–æ–ª—É—á–∏ –ø–æ–ª–µ–∑–Ω—ã–π PDF-—Ñ–∞–π–ª!",
        reply_markup=reply_markup
    )

# üìç –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == 'subscribe':
        user = query.from_user

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        subscribers.append({
            "ID": user.id,
            "Username": user.username,
            "–ò–º—è": user.first_name
        })

        # –û—Ç–ø—Ä–∞–≤–∫–∞ PDF-—Ñ–∞–π–ª–∞
        if os.path.exists(PDF_FILE_PATH):
            await query.message.reply_document(open(PDF_FILE_PATH, 'rb'), caption="üìÑ –í–æ—Ç –≤–∞—à —Ñ–∞–π–ª. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!")
        else:
            await query.message.reply_text("–§–∞–π–ª PDF –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–æ–º.")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Excel
        df = pd.DataFrame(subscribers)
        df.to_excel("subscribers.xlsx", index=False)

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    # üîê –¢–í–û–ô –¢–û–ö–ï–ù –í–°–¢–ê–í–õ–ï–ù –°–Æ–î–ê
    TOKEN = "7626564661:AAEcT-B1A00cx3BFhvmRrEhIoV3r7scr1rY"

    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_callback))
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()
